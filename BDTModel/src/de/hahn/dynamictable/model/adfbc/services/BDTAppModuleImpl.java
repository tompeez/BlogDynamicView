package de.hahn.dynamictable.model.adfbc.services;

import de.hahn.dynamictable.model.adfbc.services.common.BDTAppModule;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeDef;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 28 09:34:40 CET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BDTAppModuleImpl extends ApplicationModuleImpl implements BDTAppModule {
    private static ADFLogger _logger = ADFLogger.createADFLogger(BDTAppModuleImpl.class);
    /**
     * This is the default constructor (do not remove).
     */
    public BDTAppModuleImpl() {
    }

    /**
     * Container's getter for DynaView1.
     * @return DynaView1
     */
    public ViewObjectImpl getDynaView1() {
        return (ViewObjectImpl) findViewObject("DynaView1");
    }


    /**
     * Create a new dynamic VO from the given sql statement.
     * Remove the currect VO first!
     * @param sql SQL Statement to build hte VO from
     */
    public void createDynaView(String sql) {
        ViewObject vo = (ViewObject) getDynaView1();
        if ((vo != null) && (sql != null)) {
            vo.remove();
        } 
        
        if (sql != null) {
            vo = this.createViewObjectFromQueryStmt("DynaView1", sql);
            AttributeDef[] attributeDef = vo.getAttributeDefs();
            for (AttributeDef adef : attributeDef) {
               _logger.info("Information: " + adef.getName());
            }
            vo.executeQuery();
        }
    }
}

